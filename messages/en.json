{
  "Metadata": {
    "title": "V - React Developer",
    "description": "Vitaly Permyakov - React Developer"
  },
  "Dock": {
    "home": "Home",
    "skills": "Skills",
    "send-email": "Send Email",
    "theme": "Theme",
    "locale": "Locale"
  },
  "HomePage": {
    "front-end": "React",
    "development": "Development",
    "welcome": "Welcome!",
    "iam": {
      "full": "Hi! I am Vitaly Permyakov",
      "hi": "Hi!",
      "i": "I am",
      "am": "Vitaly Permyakov"
    },
    "experience": {
      "full": "React Dev with {yearsSinceStartJob} years of experience.",
      "front-end": "React",
      "developer": "Dev with",
      "yearsCount": "{yearsSinceStartJob}",
      "years": "years of experience."
    },
    "skills": {
      "title": "Skills",
      "terminal": "Skills initialized"
    },
    "projects": {
      "title": "Projects",
      "terminal": "Projects initialized",
      "gms": {
        "title": "Fields monitoring system.",
        "description": "A web application with role-based authorization and a custom interactive map on Konva.js. Displays fields with mining data. Supports zoom, filters, table export, and change history for admins."
      },
      "hi": {
        "title": "Website of the Humanitarian Institute.",
        "description": "The site uses Strapi CMS. Administrators can flexibly customize pages using custom components. A custom Rich Text Editor, a Calendar for the schedule of the educational process, a Calendar of events, and so on are implemented..."
      },
      "vas": {
        "title": "Website \"VII (XXIII) Russian Archaeological Congress\"",
        "description": "A site with role-based authorization, a custom admin panel, and a Strapi CMS. Implemented multi-stage authorization and uploading files to the CMS for users. Administrators in the custom admin panel can export users data, change the status of user requests, and send email newsletters."
      },
      "siberiana": {
        "title": "Sibiriana - Cultural Heritage Aggregator",
        "description": "Two web applications have been developed: the client and the admin panel. The Turborepo monorepository was used. Custom auth server on Keycloak, S3 Mini object storage, GraphQL API."
      }
    }
  }
}